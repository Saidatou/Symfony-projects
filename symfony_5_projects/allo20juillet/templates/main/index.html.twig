{% extends 'base.html.twig' %}

{% block title %}Calendrier!
{% endblock %}

{% block stylesheets %}
	<style>
		#calendrier {
			width: 80%;
			margin: auto;
		}
	</style>
{% endblock %}

{% block body %}
	<pre>
	
</pre>
	<div id="calendrier"></div>
{% endblock %}

{% block javascripts %}
	<script>

		window.onload = () => {
let calendarElt = document.querySelector("#calendrier")


// on instancie le calendrier
let calendar = new FullCalendar.Calendar(calendarElt, {
// on appelle les composants
initialView: 'timeGridWeek',
locale: "fr",
timeZone: 'Europe/Paris',
headerToolbar: {
start: 'prev, next today',
center: 'title',
end: 'dayGridMonth,timeGridWeek,list'
},
buttonText: {
prev: 'Précédent',
next: 'Suivant',
today: "Aujourd'hui",
year: 'Année',
month: 'Mois',
week: 'Semaine',
day: 'Jour',
list: 'Liste'

},
events: {{ data|raw }},
editable: true,
eventResizableFromStart: true,
eventDrop: (info) => {
if (!confirm("Etes-vous sûr.e de vouloir déplacer cet évènement?")) {
infos.revert();
}
}

})
calendar.on('eventChange', (e) => {
let url = `/api/${
e.event.id
}/edit`
let donnees = {
// "title": e.event.title,
"description": e.event.extendedProps.description,
"start": e.event.start,
"end": e.event.end,
"backgroundColor": e.event.backgroundColor,
"borderColor": e.event.borderColor,
"textColor": e.event.textColor,
"allDay": e.event.allDay
}


let xhr = new XMLHttpRequest

xhr.open("PUT", url)
xhr.send(JSON.stringify(donnees))
})
calendar.render()
}
	</script>
{% endblock %}
